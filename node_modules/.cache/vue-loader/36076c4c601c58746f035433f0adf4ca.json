{"remainingRequest":"/Applications/MAMP/htdocs/adminvokanesia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/htdocs/adminvokanesia/src/views/components/Topnav.vue?vue&type=template&id=32dddebd&","dependencies":[{"path":"/Applications/MAMP/htdocs/adminvokanesia/src/views/components/Topnav.vue","mtime":1602730459458},{"path":"/Applications/MAMP/htdocs/adminvokanesia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/adminvokanesia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/adminvokanesia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/adminvokanesia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InRvcGJhciI+CiAgPGRpdiBjbGFzcz0idG9wYmFyLWxlZnQgZC1ub25lIGQtbGctYmxvY2siPgogICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICA8YSBocmVmPSIjIiBjbGFzcz0ibG9nbyI+CiAgICAgICAgPGltZyBzcmM9ImFzc2V0cy9pbWFnZXMvbG9nby5wbmciIGhlaWdodD0iMzAiIGFsdD0ibG9nbyIgLz4KICAgICAgPC9hPgogICAgPC9kaXY+CiAgPC9kaXY+CgogIDxuYXYgY2xhc3M9Im5hdmJhci1jdXN0b20iPgogICAgPHVsIGNsYXNzPSJsaXN0LWlubGluZSBmbG9hdC1yaWdodCBtYi0wIj4KICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIG5vdGlmaWNhdGlvbi1saXN0IGRyb3Bkb3duIGQtbm9uZSBkLXNtLWlubGluZS1ibG9jayI+CiAgICAgICAgPGZvcm0gcm9sZT0ic2VhcmNoIiBjbGFzcz0iYXBwLXNlYXJjaCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIG1iLTAiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IlNlYXJjaC4uIiAvPgogICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZm9ybT4KICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIGRyb3Bkb3duIG5vdGlmaWNhdGlvbi1saXN0Ij4KICAgICAgICA8YQogICAgICAgICAgY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSBhcnJvdy1ub25lIHdhdmVzLWVmZmVjdCIKICAgICAgICAgIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIKICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICByb2xlPSJidXR0b24iCiAgICAgICAgICBhcmlhLWhhc3BvcHVwPSJmYWxzZSIKICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgID4KICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWVtYWlsLW91dGxpbmUgbm90aS1pY29uIj48L2k+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtZGFuZ2VyIGJhZGdlLXBpbGwgbm90aS1pY29uLWJhZGdlIj41PC9zcGFuPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQgZHJvcGRvd24tbWVudS1hbmltYXRlZCBkcm9wZG93bi1tZW51LWxnIj4KICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpLXRpdGxlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciBmbG9hdC1yaWdodCI+MzY3PC9zcGFuPgogICAgICAgICAgICA8aDU+TWVzc2FnZXM8L2g1PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzbGltc2Nyb2xsIiBzdHlsZT0ibWF4LWhlaWdodDogMjMwcHg7Ij4KICAgICAgICAgICAgPCEtLSBpdGVtLS0+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1pdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub3RpZnktaWNvbiI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltYWdlcy91c2Vycy91c2VyLTIuanBnIgogICAgICAgICAgICAgICAgICBhbHQ9InVzZXItaW1nIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHJvdW5kZWQtY2lyY2xlIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cCBjbGFzcz0ibm90aWZ5LWRldGFpbHMiPgogICAgICAgICAgICAgICAgPGI+Q2hhcmxlcyBNLiBKb25lczwvYj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW11dGVkIj5EdW1teSB0ZXh0IG9mIHRoZSBwcmludGluZyBhbmQgdHlwZXNldHRpbmcgaW5kdXN0cnkuPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPCEtLSBpdGVtLS0+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1pdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub3RpZnktaWNvbiI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltYWdlcy91c2Vycy91c2VyLTMuanBnIgogICAgICAgICAgICAgICAgICBhbHQ9InVzZXItaW1nIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHJvdW5kZWQtY2lyY2xlIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cCBjbGFzcz0ibm90aWZ5LWRldGFpbHMiPgogICAgICAgICAgICAgICAgPGI+VGhvbWFzIEouIE1pbW1zPC9iPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbXV0ZWQiPllvdSBoYXZlIDg3IHVucmVhZCBtZXNzYWdlczwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpZnktaXRlbSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm90aWZ5LWljb24iPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICBzcmM9ImFzc2V0cy9pbWFnZXMvdXNlcnMvdXNlci00LmpwZyIKICAgICAgICAgICAgICAgICAgYWx0PSJ1c2VyLWltZyIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCByb3VuZGVkLWNpcmNsZSIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgY2xhc3M9Im5vdGlmeS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgIEx1aXMgTS4gS29ucmFkCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCI+SXQgaXMgYSBsb25nIGVzdGFibGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPCEtLSBpdGVtLS0+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1pdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub3RpZnktaWNvbiI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltYWdlcy91c2Vycy91c2VyLTUuanBnIgogICAgICAgICAgICAgICAgICBhbHQ9InVzZXItaW1nIgogICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIHJvdW5kZWQtY2lyY2xlIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cCBjbGFzcz0ibm90aWZ5LWRldGFpbHMiPgogICAgICAgICAgICAgICAgPGI+S2VuZGFsbCBFLiBXYWxrZXI8L2I+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCI+RHVtbXkgdGV4dCBvZiB0aGUgcHJpbnRpbmcgYW5kIHR5cGVzZXR0aW5nIGluZHVzdHJ5Ljwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpZnktaXRlbSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm90aWZ5LWljb24iPgogICAgICAgICAgICAgICAgPGltZwogICAgICAgICAgICAgICAgICBzcmM9ImFzc2V0cy9pbWFnZXMvdXNlcnMvdXNlci02LmpwZyIKICAgICAgICAgICAgICAgICAgYWx0PSJ1c2VyLWltZyIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCByb3VuZGVkLWNpcmNsZSIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgY2xhc3M9Im5vdGlmeS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgIDxiPkRhdmlkIE0uIFJ5YW48L2I+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCI+WW91IGhhdmUgODcgdW5yZWFkIG1lc3NhZ2VzPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPCEtLSBBbGwtLT4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1hbGwiPlZpZXcgQWxsPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgoKICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIGRyb3Bkb3duIG5vdGlmaWNhdGlvbi1saXN0Ij4KICAgICAgICA8YQogICAgICAgICAgY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSBhcnJvdy1ub25lIHdhdmVzLWVmZmVjdCIKICAgICAgICAgIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIKICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICByb2xlPSJidXR0b24iCiAgICAgICAgICBhcmlhLWhhc3BvcHVwPSJmYWxzZSIKICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgID4KICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWJlbGwtb3V0bGluZSBub3RpLWljb24iPjwvaT4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1zdWNjZXNzIGJhZGdlLXBpbGwgbm90aS1pY29uLWJhZGdlIj4zPC9zcGFuPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQgZHJvcGRvd24tbWVudS1hbmltYXRlZCBkcm9wZG93bi1tZW51LWxnIj4KICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpLXRpdGxlIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciBmbG9hdC1yaWdodCI+ODQ8L3NwYW4+CiAgICAgICAgICAgIDxoNT5Ob3RpZmljYXRpb248L2g1PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0ic2xpbXNjcm9sbCIgc3R5bGU9Im1heC1oZWlnaHQ6IDIzMHB4OyI+CiAgICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpZnktaXRlbSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm90aWZ5LWljb24gYmctcHJpbWFyeSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1jYXJ0LW91dGxpbmUiPjwvaT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cCBjbGFzcz0ibm90aWZ5LWRldGFpbHMiPgogICAgICAgICAgICAgICAgWW91ciBvcmRlciBpcyBwbGFjZWQKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW11dGVkIj5EdW1teSB0ZXh0IG9mIHRoZSBwcmludGluZyBhbmQgdHlwZXNldHRpbmcgaW5kdXN0cnkuPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPCEtLSBpdGVtLS0+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1pdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub3RpZnktaWNvbiBiZy1zdWNjZXNzIj4KICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLW1lc3NhZ2UiPjwvaT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8cCBjbGFzcz0ibm90aWZ5LWRldGFpbHMiPgogICAgICAgICAgICAgICAgTmV3IE1lc3NhZ2UgcmVjZWl2ZWQKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW11dGVkIj5Zb3UgaGF2ZSA4NyB1bnJlYWQgbWVzc2FnZXM8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2E+CgogICAgICAgICAgICA8IS0tIGl0ZW0tLT4KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gbm90aWZ5LWl0ZW0iPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5vdGlmeS1pY29uIGJnLXdhcm5pbmciPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktbWFydGluaSI+PC9pPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxwIGNsYXNzPSJub3RpZnktZGV0YWlscyI+CiAgICAgICAgICAgICAgICBZb3VyIGl0ZW0gaXMgc2hpcHBlZAogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbXV0ZWQiPkl0IGlzIGEgbG9uZyBlc3RhYmxpc2hlZCBmYWN0IHRoYXQgYSByZWFkZXIgd2lsbDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPCEtLSBpdGVtLS0+CiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1pdGVtIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub3RpZnktaWNvbiBiZy1kYW5nZXIiPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktbWVzc2FnZSI+PC9pPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxwIGNsYXNzPSJub3RpZnktZGV0YWlscyI+CiAgICAgICAgICAgICAgICBOZXcgTWVzc2FnZSByZWNlaXZlZAogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbXV0ZWQiPllvdSBoYXZlIDg3IHVucmVhZCBtZXNzYWdlczwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0iZHJvcGRvd24taXRlbSBub3RpZnktaXRlbSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm90aWZ5LWljb24gYmctaW5mbyI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1tYXJ0aW5pIj48L2k+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgY2xhc3M9Im5vdGlmeS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgIFlvdXIgaXRlbSBpcyBzaGlwcGVkCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCI+SXQgaXMgYSBsb25nIGVzdGFibGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9hPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPCEtLSBBbGwtLT4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJkcm9wZG93bi1pdGVtIG5vdGlmeS1hbGwiPlZpZXcgQWxsPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgoKICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIGRyb3Bkb3duIG5vdGlmaWNhdGlvbi1saXN0Ij4KICAgICAgICA8YQogICAgICAgICAgY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSBhcnJvdy1ub25lIHdhdmVzLWVmZmVjdCBuYXYtdXNlciIKICAgICAgICAgIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIKICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICByb2xlPSJidXR0b24iCiAgICAgICAgICBhcmlhLWhhc3BvcHVwPSJmYWxzZSIKICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIgogICAgICAgID4KICAgICAgICAgIDxpbWcgc3JjPSJhc3NldHMvaW1hZ2VzL3VzZXJzL3VzZXItMS5qcGciIGFsdD0idXNlciIgY2xhc3M9InJvdW5kZWQtY2lyY2xlIiAvPgogICAgICAgIDwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQgZHJvcGRvd24tbWVudS1hbmltYXRlZCBwcm9maWxlLWRyb3Bkb3duIj4KICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIiBocmVmPSIjIj4KICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktYWNjb3VudC1jaXJjbGUgbS1yLTUgdGV4dC1tdXRlZCI+PC9pPiBQcm9maWxlCiAgICAgICAgICA8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1zdWNjZXNzIG10LTEgZmxvYXQtcmlnaHQiPjU8L3NwYW4+CiAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLXNldHRpbmdzIG0tci01IHRleHQtbXV0ZWQiPjwvaT4gU2V0dGluZ3MKICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIiBocmVmPSIjIj4KICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktbG9jay1vcGVuLW91dGxpbmUgbS1yLTUgdGV4dC1tdXRlZCI+PC9pPiBMb2NrIHNjcmVlbgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgdi1vbjpjbGljaz0ibG9nb3V0IiBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWxvZ291dCBtLXItNSB0ZXh0LW11dGVkIj48L2k+IExvZ291dAogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgogICAgPC91bD4KCiAgICA8dWwgY2xhc3M9Imxpc3QtaW5saW5lIG1lbnUtbGVmdCBtYi0wIj4KICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj4KICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ1dHRvbi1tZW51LW1vYmlsZSBvcGVuLWxlZnQgd2F2ZXMtZWZmZWN0Ij4KICAgICAgICAgIDxpIGNsYXNzPSJpb24tbmF2aWNvbiI+PC9pPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2xpPgogICAgPC91bD4KCiAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+CiAgPC9uYXY+CjwvZGl2Pgo="},null]}